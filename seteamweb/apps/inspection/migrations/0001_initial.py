# Generated by Django 5.1.4 on 2024-12-06 07:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer', '0001_initial'),
        ('packages', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AndroidInspectResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_info', models.CharField(blank=True, max_length=30, null=True)),
                ('rooting_test', models.BooleanField(default=False)),
                ('rooting', models.BooleanField(default=False)),
                ('integrity', models.BooleanField(default=False)),
                ('emulator', models.BooleanField(default=False)),
                ('obfuscate', models.BooleanField(default=False)),
                ('decompile', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='packages.packages')),
            ],
            options={
                'db_table': 'AndroidInspectResult',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InspectionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_date', models.DateField()),
                ('details', models.TextField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='packages.packages')),
            ],
            options={
                'db_table': 'InspectionRecord',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InspectionSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('January', models.BooleanField(default=False)),
                ('February', models.BooleanField(default=False)),
                ('March', models.BooleanField(default=False)),
                ('April', models.BooleanField(default=False)),
                ('May', models.BooleanField(default=False)),
                ('June', models.BooleanField(default=False)),
                ('July', models.BooleanField(default=False)),
                ('August', models.BooleanField(default=False)),
                ('September', models.BooleanField(default=False)),
                ('October', models.BooleanField(default=False)),
                ('November', models.BooleanField(default=False)),
                ('December', models.BooleanField(default=False)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.customer', to_field='name')),
            ],
            options={
                'db_table': 'InspectionSchedule',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='iOSInspectResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_info', models.CharField(blank=True, max_length=30, null=True)),
                ('jailbreak_test', models.BooleanField(default=False)),
                ('jailbreak', models.BooleanField(default=False)),
                ('integrity', models.BooleanField(default=False)),
                ('string_encrypt', models.BooleanField(default=False)),
                ('symbol_del', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='packages.packages')),
            ],
            options={
                'db_table': 'iOSInspectResult',
                'managed': True,
            },
        ),
    ]
